import os
import asyncio
import aiohttp
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# ‡§¨‡•â‡§ü ‡§ü‡•ã‡§ï‡§® ‡§î‡§∞ ‡§ö‡•à‡§®‡§≤ ‡§Ü‡§à‡§°‡•Ä
BOT_TOKEN = "7960651818:AAFYfETT-JeASRu3_eVCifKc6LbBqZPR-yA"
CHANNEL_ID = "-1002624797462"

# ‡§´‡§º‡§æ‡§á‡§≤ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡§æ async ‡§´‡§º‡§Ç‡§ï‡•ç‡§∂‡§®
async def download_file(url, filename):
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            if resp.status == 200:
                with open(filename, 'wb') as f:
                    f.write(await resp.read())
                return True
            return False

# /upload ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
async def upload(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("‚ùå ‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§≤‡§ø‡§Ç‡§ï ‡§¶‡•á‡§Ç‡•§\n‡§â‡§¶‡§æ‡§π‡§∞‡§£: /upload <‡§≤‡§ø‡§Ç‡§ï>")
        return

    url = context.args[0]
    filename = "downloaded_file"

    await update.message.reply_text("üì• ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...")

    if await download_file(url, filename):
        await context.bot.send_document(chat_id=CHANNEL_ID, document=open(filename, 'rb'))
        await update.message.reply_text("‚úÖ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§≤‡•ã‡§° ‡§π‡•ã ‡§ó‡§Ø‡§æ!")
        os.remove(filename)
    else:
        await update.message.reply_text("‚ùå ‡§´‡§º‡§æ‡§á‡§≤ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§∏‡§ï‡•Ä‡•§")

# ‡§Æ‡•Å‡§ñ‡•ç‡§Ø async function
async def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("upload", upload))
    await app.run_polling()

# ‡§è‡§Ç‡§ü‡•ç‡§∞‡•Ä ‡§™‡•â‡§á‡§Ç‡§ü ‚Äî Safe asyncio launch for environments like Render
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except RuntimeError as e:
        if "event loop is closed" in str(e) or "Cannot close a running event loop" in str(e):
            # ‡§ú‡§¨ ‡§∞‡§®‡§ø‡§Ç‡§ó ‡§≤‡•Ç‡§™ ‡§¨‡§Ç‡§¶ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ (Render ‡§ú‡•à‡§∏‡•Ä ‡§ú‡§ó‡§π‡•ã‡§Ç ‡§™‡§∞)
            loop = asyncio.get_event_loop()
            loop.create_task(main())
            loop.run_forever()
        else:
            raise
            
